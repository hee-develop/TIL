(self.webpackChunk=self.webpackChunk||[]).push([[6044],{7031:(e,t,r)=>{"use strict";r.r(t),r.d(t,{data:()=>n});const n={key:"v-0b4869d3",path:"/ko/development-theory/skeleton-screen.html",title:"Skeleton screen",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:3,title:"주의점",slug:"주의점",children:[]}],filePathRelative:"ko/development-theory/skeleton-screen.md",git:{updatedTime:1629537148e3,contributors:[]}}},6714:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>l});const n=(0,r(6252).uE)('<h1 id="skeleton-screen" tabindex="-1"><a class="header-anchor" href="#skeleton-screen" aria-hidden="true">#</a> Skeleton screen</h1><p><code>Written: 2021-08-12</code></p><p>페이지의 컨텐츠의 레이아웃을 미리 보여주는 화면.</p><p>최근 애플리케이션에서 로딩 화면 대신 사용되고 있다. 이유는 체감 로딩 시간이 더 짧기 때문인데, 관련 전공이 아니라 구체적으로 어떻게 짧게 느끼는지는 알기 어려우나 대략적인 이유는 다음과 같다.</p><ul><li>로딩 화면은 콘텐츠의 화면과는 별개이다. 그리고, 대체로 데이터를 모두 불러오기 전까지, 사용자는 로딩 화면에서 계속 머물러 있어야 한다.</li><li>사용자 입장에서는 로딩 화면에서 스피너 혹은 프로그레스 바가 움직이는 것만으로 언제 표시되는지 알 길이 없고, 사용자는 콘텐츠와 상관이 없는 같은 화면을 오랫동안 보고 있어야 하므로 심리적으로 지루하게 생각될 수 있다.</li><li>스켈레톤 스크린은 콘텐츠의 화면과 비슷한 레이아웃을 지닌 화면이다. 로딩 화면과 달리, 비슷한(혹은 같은) 화면을 제공하기 때문에 로딩이 끝난 뒤 화면 전환이 없게 느껴지고, 때문에 로딩 화면에 비해 지루함이 적다는 장점을 갖는다.</li></ul><h3 id="주의점" tabindex="-1"><a class="header-anchor" href="#주의점" aria-hidden="true">#</a> 주의점</h3><p>스켈레톤 스크린 역시 로딩중이라는 것을 시각적으로 알리기 위한 장치에 불과하다. 때문에 고정된 형태로 사용하면 로딩중인지 알 수 없어 불안감을 느낄 수 있다. 따라서, 스켈레톤 스크린은 애니메이션 등을 이용해 동적인 형태로 제공되는 것이 바람직하다.</p>',7),l={render:function(e,t){return n}}}}]);