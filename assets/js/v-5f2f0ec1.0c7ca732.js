(self.webpackChunk=self.webpackChunk||[]).push([[215],{223:(e,r,a)=>{"use strict";a.r(r),a.d(r,{data:()=>t});const t={key:"v-5f2f0ec1",path:"/ko/frontend/cors.html",title:"CORS",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:3,title:"'출처(origin)'란",slug:"출처-origin-란",children:[]},{level:3,title:"출처",slug:"출처",children:[]}],filePathRelative:"ko/frontend/cors.md",git:{updatedTime:null,contributors:[]}}},8559:(e,r,a)=>{"use strict";a.r(r),a.d(r,{default:()=>n});var t=a(6252);const i=(0,t.uE)('<h1 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h1><p><code>Written: 2021-07-03</code></p><p>CORS는 <code>Cross-Origin Resource Sharing</code>의 줄임말로, 한 출처에서 실행 중인 웹 애플리케이션이 다른 출처의 자원에 접근할 수 있는 권한을 부여하도록 브라우저에 알려주는 체제를 뜻한다.</p><h3 id="출처-origin-란" tabindex="-1"><a class="header-anchor" href="#출처-origin-란" aria-hidden="true">#</a> &#39;출처(origin)&#39;란</h3><p>출처는 웹 컨텐츠에 접근할 때 사용되는 URI를 의미한다. 여기에 포함되는 건 프로토콜, 호스트, 포트이며, 이들이 모두 일치하는 경우 같은 출처를 가졌다고 말한다.</p><h4 id="동일-출처인-것" tabindex="-1"><a class="header-anchor" href="#동일-출처인-것" aria-hidden="true">#</a> 동일 출처인 것</h4><ul><li><code>http://example.com/app1/index.html</code></li><li><code>http://example.com/app2/index.html</code> 위 둘은 경로(path)는 다르지만 같은 프로토콜(<code>http</code>)과 도메인(<code>example.com</code>)을 가지므로 동일 출처이다.</li></ul><h3 id="출처" tabindex="-1"><a class="header-anchor" href="#출처" aria-hidden="true">#</a> 출처</h3>',8),o={href:"https://developer.mozilla.org/ko/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("교차 출처 리소스 공유"),n={render:function(e,r){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[i,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",o,[d,(0,t.Wm)(a)])])])],64)}}}}]);