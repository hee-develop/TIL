(self.webpackChunk=self.webpackChunk||[]).push([[499],{3082:(e,a,i)=>{"use strict";i.r(a),i.d(a,{data:()=>t});const t={key:"v-3d144a12",path:"/ko/database/database-index.html",title:"Index",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:3,title:"인덱스를 쓰면 좋은 경우",slug:"인덱스를-쓰면-좋은-경우",children:[]}],filePathRelative:"ko/database/database-index.md",git:{updatedTime:1624843445e3,contributors:[{name:"hee-develop",email:"hee950320@yahoo.co.jp",commits:1}]}}},4793:(e,a,i)=>{"use strict";i.r(a),i.d(a,{default:()=>d});const t=(0,i(6252).uE)('<h1 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> Index</h1><p><code>Written: 2021-06-24</code></p><p>솔직히 ORM이니 뭐니 추상화가 높아져서 개념 정도로만 정도로만 이해하고 있었다.</p><p>인덱스란 테이블의 검색 속도를 향상시키기 위한 자료 구조이다. 책의 색인과 비슷한 역할을 한다. DB를 전체 검색하는 데에는 많은 시간이 소요되므로, 자주 사용되는 값을 따로 저장해 두어 사용한다.</p><ul><li>데이터 검색의 속도가 빨라지므로, 전체적인 성능이 향상되는 부가적인 효과가 있다.</li><li>다만 인덱스를 만들 때 시간이 걸리므로, 수정이 자주 이루어지는 테이블이라면 오히려 만드는 데에 오버헤드가 발생한다.</li></ul><h3 id="인덱스를-쓰면-좋은-경우" tabindex="-1"><a class="header-anchor" href="#인덱스를-쓰면-좋은-경우" aria-hidden="true">#</a> 인덱스를 쓰면 좋은 경우</h3><ul><li>규모가 작지 않은 테이블</li><li>데이터의 수정이 자주 이루어지지 않는 테이블</li><li>검색이 자주 이루어지는 테이블</li><li>데이터의 중복도가 낮은 컬럼</li></ul><p>면접 때 탈탈 털렸다.</p>',8),d={render:function(e,a){return t}}}}]);