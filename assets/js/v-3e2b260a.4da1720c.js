(self.webpackChunk=self.webpackChunk||[]).push([[2222],{8237:(e,a,t)=>{"use strict";t.r(a),t.d(a,{data:()=>l});const l={key:"v-3e2b260a",path:"/ko/frontend/graphql.html",title:"GraphQL",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[],filePathRelative:"ko/frontend/graphql.md",git:{updatedTime:1626185508e3,contributors:[{name:"hee-develop",email:"hee950320@yahoo.co.jp",commits:1}]}}},8572:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>r});const l=(0,t(6252).uE)('<h1 id="graphql" tabindex="-1"><a class="header-anchor" href="#graphql" aria-hidden="true">#</a> GraphQL</h1><p><code>Written: 2021-07-13</code></p><p>회사에서 이미 사용중이기는 하지만 솔직히 제대로 파악하지 못하고 있어서 간략하게 찾아보았다.</p><ul><li>graphql(이하 gql)은 새로운 쿼리 언어로 서버보다는 클라이언트측에서 사용될 수 있게끔 설계된 언어이다.</li><li>한 번의 요청으로 (쿼리에 적혀 있는) 필요한 모든 정보를 가져올 수 있게끔 설계되어 있다.</li><li><code>/graphql</code>이라는 단일 end-point를 가지며, 어떠한 기술에 종속되지 않는 단일 기술이다. 심지어 네트워크 방식에도 종속적이지 않아서, HTTP 이외의 방법으로도 데이터 송수신이 가능하다.</li><li>데이터를 읽는 것은 쿼리라고 하고, 데이터를 변경하는 것은 뮤테이션이라고 한다.</li><li>요청된 데이터를 가져오기 위해 서버는 리졸버를 구현할 필요가 있다.</li></ul>',4),r={render:function(e,a){return l}}}}]);