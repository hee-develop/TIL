(self.webpackChunk=self.webpackChunk||[]).push([[4887],{982:(s,a,n)=>{"use strict";n.r(a),n.d(a,{data:()=>t});const t={key:"v-12aaff5e",path:"/ko/frontend/add-alias-in-gatsby-ts.html",title:"Gatsby + TS 에서 import alias 사용하기",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:3,title:"TL;DR",slug:"tl-dr",children:[]},{level:3,title:"원인",slug:"원인",children:[]},{level:3,title:"과정",slug:"과정",children:[]}],filePathRelative:"ko/frontend/add-alias-in-gatsby-ts.md",git:{updatedTime:1628030041e3,contributors:[]}}},2062:(s,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>k});var t=n(6252);const e=(0,t.uE)('<h1 id="gatsby-ts-에서-import-alias-사용하기" tabindex="-1"><a class="header-anchor" href="#gatsby-ts-에서-import-alias-사용하기" aria-hidden="true">#</a> Gatsby + TS 에서 import alias 사용하기</h1><p><code>Written: 2021-07-21</code></p><h3 id="tl-dr" tabindex="-1"><a class="header-anchor" href="#tl-dr" aria-hidden="true">#</a> TL;DR</h3><p><code>yarn add gatsby-alias-imports</code></p><p>&amp;&amp;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      resolve<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-alias-imports</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        aliases<span class="token operator">:</span> <span class="token punctuation">{</span>\n          styles<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">src/styles</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          config<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">config/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          <span class="token string">&quot;@utils&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/utils/&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="원인" tabindex="-1"><a class="header-anchor" href="#원인" aria-hidden="true">#</a> 원인</h3><p>gatsby 내장 webpack에서 alias를 인식하지 못했다.</p><h3 id="과정" tabindex="-1"><a class="header-anchor" href="#과정" aria-hidden="true">#</a> 과정</h3><ol start="0"><li><code>tsconfig.json</code> 파일을 수정해 트랜스컴파일 과정에서 alias된 경로가 입력되게 하고 싶었다.</li></ol><ul><li>IDE에서는 에러가 사라졌는데 컴파일 시 에러는 그대로다. 트랜스컴파일 과정에서 제대로 주입이 안된 것 같다.</li></ul><ol><li>gatsby 내장 webpack을 설정할 수 있는 <code>setWebpackConfig</code> API 를 사용하면 <code>webpack.config.js</code>에서 쓰는 것처럼 webpack을 설정할 수 있다.</li></ol><ul><li>왠지 모르겠는데 해도 그대로였다. 반영이 안 됐다.</li></ul><ol start="2"><li><code>.eslintrc.js</code>를 수정해서 resolver를 입력하면 ESLint 설정을 변경할 수 있다.</li></ol><ul><li>린터만 수정해주지 실제 경로를 삽입해주지는 않는다. 실패</li></ul><ol start="3"><li>gatsby 플러그인을 사용한다.</li></ol>',16),l={href:"https://www.gatsbyjs.com/plugins/gatsby-alias-imports/",target:"_blank",rel:"noopener noreferrer"},p=(0,t.Uk)("gatsby-alias-imports"),o=(0,t.Uk)(" 라는 플러그인을 사용했다."),i=(0,t.Wm)("li",null,"홈페이지에 나와있는대로 설정했더니 문제 없이 잘 됐다.",-1),r=(0,t.Uk)("궁금해서 내부 코드를 보니 "),c={href:"https://www.gatsbyjs.com/plugins/gatsby-alias-imports/",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("1번과 똑같은 설정을 하고 있다"),d=(0,t.Uk)(". 1번은 왜 안 된거지?"),b=(0,t.Wm)("p",null,"개츠비의 장점은 플러그인이므로 플러그인으로 해결하는 것은 나쁘지 않은 생각인 것 같다..",-1),k={render:function(s,a){const n=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",l,[p,(0,t.Wm)(n)]),o]),i,(0,t.Wm)("li",null,[r,(0,t.Wm)("a",c,[u,(0,t.Wm)(n)]),d])]),b],64)}}}}]);