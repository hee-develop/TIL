(self.webpackChunk=self.webpackChunk||[]).push([[6485],{9455:(r,e,o)=>{"use strict";o.r(e),o.d(e,{data:()=>a});const a={key:"v-218d88d7",path:"/ko/server/reverse-proxy-forward-proxy.html",title:"Reverse Proxy와 Forward Proxy의 차이",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"Proxy",slug:"proxy",children:[]},{level:2,title:"Forward Proxy",slug:"forward-proxy",children:[]},{level:2,title:"Reverse Proxy",slug:"reverse-proxy",children:[]},{level:2,title:"프록시 서버를 사용하는 이유",slug:"프록시-서버를-사용하는-이유",children:[]}],filePathRelative:"ko/server/reverse-proxy-forward-proxy.md",git:{updatedTime:1624927827e3,contributors:[{name:"hee-develop",email:"hee950320@yahoo.co.jp",commits:1}]}}},1990:(r,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>i});const a=(0,o(6252).uE)('<h1 id="reverse-proxy와-forward-proxy의-차이" tabindex="-1"><a class="header-anchor" href="#reverse-proxy와-forward-proxy의-차이" aria-hidden="true">#</a> Reverse Proxy와 Forward Proxy의 차이</h1><p><code>Written: 2021-06-29</code></p><h2 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h2><p>클라이언트가 자신을 통해 다른 네트워크에 간접적으로 접속할 수 있게 해주는 컴퓨터 시스템, 혹은 응용 프로그램.<br> 대리로 통신하는 작업은 &#39;프록시&#39;, 그 중계 기능을 하는 것을 &#39;프록시 서버&#39;라고 부른다.</p><p><img src="https://docs.microsoft.com/en-us/iis/extensions/configuring-application-request-routing-arr/creating-a-forward-proxy-using-application-request-routing/_static/image1.jpg" alt="프록시 개념도"> 출처: https://docs.microsoft.com/en-us/iis/extensions/configuring-application-request-routing-arr/creating-a-forward-proxy-using-application-request-routing</p><h2 id="forward-proxy" tabindex="-1"><a class="header-anchor" href="#forward-proxy" aria-hidden="true">#</a> Forward Proxy</h2><p>일반적으로 프록시라고 불리는 개념. 클라이언트의 요청을 받아 서버에 대신 전달해주는 방식.<br><strong>인터넷보다 프록시 서버를 먼저 호출하게 되면 포워드 프록시</strong></p><h2 id="reverse-proxy" tabindex="-1"><a class="header-anchor" href="#reverse-proxy" aria-hidden="true">#</a> Reverse Proxy</h2><p>이름 그대로 &#39;반대로 된&#39; 프록시. 서버의 요청을 받아 클라이언트에 대신 전달해주는 방식.<br><strong>프록시 서버를 먼저 호출</strong></p><p>여러 대의 서버의 요청을 대신 전달해주는 기능을 갖고 있기 때문에, 일종의 스위치 같은 역할을 하며, 나아가 로드밸런싱도 가능함</p><h2 id="프록시-서버를-사용하는-이유" tabindex="-1"><a class="header-anchor" href="#프록시-서버를-사용하는-이유" aria-hidden="true">#</a> 프록시 서버를 사용하는 이유</h2><ol><li>보안 <ul><li>서로 프록시 서버를 거치기 때문에 IP를 숨길 수 있는 방법이 생김</li></ul></li><li>성능 <ul><li>프록시 서버는 캐싱이 가능하므로 불필요한 요청을 생략할 수 있다.</li><li>로드 밸런싱 기능을 수행할 수 있으므로 트래픽을 분산시킬 수 있다.</li></ul></li></ol>',12),i={render:function(r,e){return a}}}}]);